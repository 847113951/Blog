<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ylb.Mapper.BlogMapper">
    <resultMap id="BaseResultMap" type="com.ylb.Pojo.Blog">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="first_picture" jdbcType="VARCHAR" property="firstPicture"/>
        <result column="flag" jdbcType="VARCHAR" property="flag"/>
        <result column="views" jdbcType="INTEGER" property="views"/>
        <result column="apprecation" jdbcType="INTEGER" property="apprecation"/>
        <result column="share_statement" jdbcType="INTEGER" property="shareStatement"/>
        <result column="commentabled" jdbcType="INTEGER" property="commentabled"/>
        <result column="published" jdbcType="INTEGER" property="published"/>
        <result column="recommened" jdbcType="INTEGER" property="recommened"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="type_id" jdbcType="BIGINT" property="typeId"/>
        <result column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.ylb.Pojo.Blog">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <result column="content" jdbcType="LONGVARCHAR" property="content"/>
    </resultMap>
    <resultMap id="Blog_Type" type="com.ylb.Pojo.Blog">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="content" jdbcType="VARCHAR" property="content"/>
        <result column="first_picture" jdbcType="VARCHAR" property="firstPicture"/>
        <result column="flag" jdbcType="VARCHAR" property="flag"/>
        <result column="views" jdbcType="INTEGER" property="views"/>
        <result column="apprecation" jdbcType="INTEGER" property="apprecation"/>
        <result column="share_statement" jdbcType="INTEGER" property="shareStatement"/>
        <result column="commentabled" jdbcType="INTEGER" property="commentabled"/>
        <result column="published" jdbcType="INTEGER" property="published"/>
        <result column="recommened" jdbcType="INTEGER" property="recommened"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="type_id" jdbcType="BIGINT" property="typeId"/>
        <result column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <association property="type" javaType="Type">
            <id column="id" property="id"/>
            <result column="name" property="name"/>
        </association>
        <association property="user" javaType="User">
            <id column="id" jdbcType="BIGINT" property="id"/>
            <result column="nickname" jdbcType="VARCHAR" property="nickname"/>
            <result column="password" jdbcType="VARCHAR" property="password"/>
            <result column="email" jdbcType="VARCHAR" property="email"/>
            <result column="avater" jdbcType="VARCHAR" property="avater"/>
            <result column="type" jdbcType="INTEGER" property="type"/>
            <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
            <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
            <result column="username" jdbcType="VARCHAR" property="username"/>
        </association>
        <collection property="tags" ofType="Tag">
            <id column="id" jdbcType="BIGINT" property="id"/>
            <result column="name" jdbcType="VARCHAR" property="name"/>
        </collection>
    </resultMap>


    <sql id="SBlog_Type">
        b.id, b.title, b.content, b.first_picture, b.description,b.flag, b.views, b.apprecation, b.share_statement, b.commentabled,
        b.published, b.recommened, b.create_time, b.update_time, b.type_id, b.user_id,
        t.id,t.name
    </sql>

    <sql id="SBlog_Type_User">
        b.id, b.title, b.content, b.first_picture, b.description,b.flag, b.views, b.apprecation, b.share_statement, b.commentabled,
        b.published, b.recommened, b.create_time, b.update_time, b.type_id, b.user_id,
        t.id,t.name,
        u.id, u.nickname, u.password, u.email, u.avater, u.type, u.create_time, u.update_time, u.username
    </sql>
    <sql id="SBlog_Type_User_Tag">
        b.id, b.title, b.content, b.first_picture, b.description,b.flag, b.views, b.apprecation, b.share_statement, b.commentabled,
        b.published, b.recommened, b.create_time, b.update_time, b.type_id, b.user_id,
        t.id,t.name,
        u.id, u.nickname, u.password, u.email, u.avater, u.type, u.create_time, u.update_time, u.username,
		tag.id,tag.name

    </sql>

    <sql id="Example_Where_Clause">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        id, title, first_picture, flag, views, apprecation, share_statement, commentabled,
        published, recommened, create_time, update_time, type_id, user_id, description
    </sql>
    <sql id="Blob_Column_List">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        content
    </sql>
    <select id="selectByExampleWithBLOBs" parameterType="com.ylb.Pojo.Example.BlogExample"
            resultMap="ResultMapWithBLOBs">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from t_blog
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" parameterType="com.ylb.Pojo.Example.BlogExample" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from t_blog
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from t_blog
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from t_blog
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.ylb.Pojo.Example.BlogExample">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from t_blog
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.ylb.Pojo.Blog" useGeneratedKeys="true" keyProperty="id">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into t_blog (id, title, first_picture,
        flag, views, apprecation,
        share_statement, commentabled, published,
        recommened, create_time, update_time,
        type_id, user_id, description,
        content)
        values (#{id,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{firstPicture,jdbcType=VARCHAR},
        #{flag,jdbcType=VARCHAR}, #{views,jdbcType=INTEGER}, #{apprecation,jdbcType=INTEGER},
        #{shareStatement,jdbcType=INTEGER}, #{commentabled,jdbcType=INTEGER}, #{published,jdbcType=INTEGER},
        #{recommened,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
        #{typeId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{description,jdbcType=VARCHAR},
        #{content,jdbcType=LONGVARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.ylb.Pojo.Blog">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into t_blog
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="firstPicture != null">
                first_picture,
            </if>
            <if test="flag != null">
                flag,
            </if>
            <if test="views != null">
                views,
            </if>
            <if test="apprecation != null">
                apprecation,
            </if>
            <if test="shareStatement != null">
                share_statement,
            </if>
            <if test="commentabled != null">
                commentabled,
            </if>
            <if test="published != null">
                published,
            </if>
            <if test="recommened != null">
                recommened,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="typeId != null">
                type_id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="content != null">
                content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="firstPicture != null">
                #{firstPicture,jdbcType=VARCHAR},
            </if>
            <if test="flag != null">
                #{flag,jdbcType=VARCHAR},
            </if>
            <if test="views != null">
                #{views,jdbcType=INTEGER},
            </if>
            <if test="apprecation != null">
                #{apprecation,jdbcType=INTEGER},
            </if>
            <if test="shareStatement != null">
                #{shareStatement,jdbcType=INTEGER},
            </if>
            <if test="commentabled != null">
                #{commentabled,jdbcType=INTEGER},
            </if>
            <if test="published != null">
                #{published,jdbcType=INTEGER},
            </if>
            <if test="recommened != null">
                #{recommened,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="typeId != null">
                #{typeId,jdbcType=BIGINT},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                #{content,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.ylb.Pojo.Example.BlogExample" resultType="java.lang.Long">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select count(*) from t_blog
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update t_blog
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.title != null">
                title = #{record.title,jdbcType=VARCHAR},
            </if>
            <if test="record.firstPicture != null">
                first_picture = #{record.firstPicture,jdbcType=VARCHAR},
            </if>
            <if test="record.flag != null">
                flag = #{record.flag,jdbcType=VARCHAR},
            </if>
            <if test="record.views != null">
                views = #{record.views,jdbcType=INTEGER},
            </if>
            <if test="record.apprecation != null">
                apprecation = #{record.apprecation,jdbcType=INTEGER},
            </if>
            <if test="record.shareStatement != null">
                share_statement = #{record.shareStatement,jdbcType=INTEGER},
            </if>
            <if test="record.commentabled != null">
                commentabled = #{record.commentabled,jdbcType=INTEGER},
            </if>
            <if test="record.published != null">
                published = #{record.published,jdbcType=INTEGER},
            </if>
            <if test="record.recommened != null">
                recommened = #{record.recommened,jdbcType=INTEGER},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.typeId != null">
                type_id = #{record.typeId,jdbcType=BIGINT},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=BIGINT},
            </if>
            <if test="record.description != null">
                description = #{record.description,jdbcType=VARCHAR},
            </if>
            <if test="record.content != null">
                content = #{record.content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update t_blog
        set id = #{record.id,jdbcType=BIGINT},
        title = #{record.title,jdbcType=VARCHAR},
        first_picture = #{record.firstPicture,jdbcType=VARCHAR},
        flag = #{record.flag,jdbcType=VARCHAR},
        views = #{record.views,jdbcType=INTEGER},
        apprecation = #{record.apprecation,jdbcType=INTEGER},
        share_statement = #{record.shareStatement,jdbcType=INTEGER},
        commentabled = #{record.commentabled,jdbcType=INTEGER},
        published = #{record.published,jdbcType=INTEGER},
        recommened = #{record.recommened,jdbcType=INTEGER},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
        type_id = #{record.typeId,jdbcType=BIGINT},
        user_id = #{record.userId,jdbcType=BIGINT},
        description = #{record.description,jdbcType=VARCHAR},
        content = #{record.content,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update t_blog
        set id = #{record.id,jdbcType=BIGINT},
        title = #{record.title,jdbcType=VARCHAR},
        first_picture = #{record.firstPicture,jdbcType=VARCHAR},
        flag = #{record.flag,jdbcType=VARCHAR},
        views = #{record.views,jdbcType=INTEGER},
        apprecation = #{record.apprecation,jdbcType=INTEGER},
        share_statement = #{record.shareStatement,jdbcType=INTEGER},
        commentabled = #{record.commentabled,jdbcType=INTEGER},
        published = #{record.published,jdbcType=INTEGER},
        recommened = #{record.recommened,jdbcType=INTEGER},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
        type_id = #{record.typeId,jdbcType=BIGINT},
        user_id = #{record.userId,jdbcType=BIGINT},
        description = #{record.description,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.ylb.Pojo.Blog">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update t_blog
        <set>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="firstPicture != null">
                first_picture = #{firstPicture,jdbcType=VARCHAR},
            </if>
            <if test="flag != null">
                flag = #{flag,jdbcType=VARCHAR},
            </if>
            <if test="views != null">
                views = #{views,jdbcType=INTEGER},
            </if>
            <if test="apprecation != null">
                apprecation = #{apprecation,jdbcType=INTEGER},
            </if>
            <if test="shareStatement != null">
                share_statement = #{shareStatement,jdbcType=INTEGER},
            </if>
            <if test="commentabled != null">
                commentabled = #{commentabled,jdbcType=INTEGER},
            </if>
            <if test="published != null">
                published = #{published,jdbcType=INTEGER},
            </if>
            <if test="recommened != null">
                recommened = #{recommened,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="typeId != null">
                type_id = #{typeId,jdbcType=BIGINT},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ylb.Pojo.Blog">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update t_blog
        set title = #{title,jdbcType=VARCHAR},
        first_picture = #{firstPicture,jdbcType=VARCHAR},
        flag = #{flag,jdbcType=VARCHAR},
        views = #{views,jdbcType=INTEGER},
        apprecation = #{apprecation,jdbcType=INTEGER},
        share_statement = #{shareStatement,jdbcType=INTEGER},
        commentabled = #{commentabled,jdbcType=INTEGER},
        published = #{published,jdbcType=INTEGER},
        recommened = #{recommened,jdbcType=INTEGER},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP},
        type_id = #{typeId,jdbcType=BIGINT},
        user_id = #{userId,jdbcType=BIGINT},
        description = #{description,jdbcType=VARCHAR},
        content = #{content,jdbcType=LONGVARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ylb.Pojo.Blog">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update t_blog
        set title = #{title,jdbcType=VARCHAR},
        first_picture = #{firstPicture,jdbcType=VARCHAR},
        flag = #{flag,jdbcType=VARCHAR},
        views = #{views,jdbcType=INTEGER},
        apprecation = #{apprecation,jdbcType=INTEGER},
        share_statement = #{shareStatement,jdbcType=INTEGER},
        commentabled = #{commentabled,jdbcType=INTEGER},
        published = #{published,jdbcType=INTEGER},
        recommened = #{recommened,jdbcType=INTEGER},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP},
        type_id = #{typeId,jdbcType=BIGINT},
        user_id = #{userId,jdbcType=BIGINT},
        description = #{description,jdbcType=VARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>


    <select id="getBlog" resultMap="Blog_Type">
        select
        <include refid="SBlog_Type"/>
        from t_blog b,t_type t where b.type_id=t.id
        <if test="title!=null">
            and b.title like CONCAT('%','${title}','%' )
        </if>
        <if test="typeId!=null">
            and b.type_id=#{typeId}
        </if>
        <if test="recommened!=null">
            and b.recommened=#{recommened}
        </if>
        <if test="description!=null">
            and b.description=#{description}
        </if>

    </select>


    <insert id="saveBlogTags" parameterType="com.ylb.Pojo.Blog">
        insert into blog_tag(blog_id, tag_id) values
        <foreach collection="tids" item="tag" index="index" separator=",">
            (#{id},#{tag.id})
        </foreach>
    </insert>

    <delete id="deleteBlogTag">
        delete  from blog_tag where blog_id=#{id}
    </delete>

    <select id="getByPublished" resultMap="Blog_Type">
        select
        <include refid="SBlog_Type_User"/>
        from t_blog b,t_type t,t_user u where published=1 and b.type_id=t.id and b.user_id=u.id
        ORDER BY b.create_time desc
    </select>

    <select id="getByPublishedById" resultMap="Blog_Type">
        select
        <include refid="SBlog_Type_User"/>
        from t_blog b,t_type t,t_user u
        where published=1
        and b.type_id=t.id and b.user_id=u.id and b.id=#{id}
    </select>


    <select id="getRecommened" resultType="Blog">
        select * from t_blog where recommened=1 limit 0,8
    </select>


    <select id="getFooterBlogList" resultType="Blog">
        select * from t_blog order  by  create_time desc limit 0,3
    </select>



    <select id="search" resultMap="Blog_Type">
        select
        <include refid="SBlog_Type_User"/>
        from t_blog b,t_type t,t_user u
        where published=1
        and b.type_id=t.id
        and b.user_id=u.id
        and title like concat('%',#{query},'%')

    </select>

    <select id="MyGetBlogById" resultMap="Blog_Type">
        select
        <include refid="SBlog_Type_User_Tag"/>
        from t_blog b,t_type t,t_user u,t_tag tag,blog_tag bt
        where published=1
        and b.type_id=t.id
        and b.user_id=u.id
        and tag.id=bt.tag_id
        and b.id=bt.blog_id
        and b.id=#{id}
    </select>


    <select id="getType" resultMap="MyBlog_Type">
        select
        <include refid="MySBlog_Type_User_Tag"/>
        from t_blog b,t_type t,t_user u,t_tag tag,blog_tag bt
        where b.type_id=t.id
        and b.user_id=u.id
        and tag.id=bt.tag_id
        and b.id=bt.blog_id
        and b.type_Id=#{id}
    </select>

    <select id="getBlogByTag" resultMap="MyBlog_Type">
        select
        <include refid="MySBlog_Type_User_Tag"/>
        from t_blog b,t_type t,t_user u,t_tag tag,blog_tag bt
        where b.type_id=t.id
        and b.user_id=u.id
        and tag.id=bt.tag_id
        and b.id=bt.blog_id
        and b.id in (select bt1.blog_id from blog_tag bt1 where bt1.tag_id=#{id})
    </select>


    <select id="getBlogByTime" resultMap="MyBlog_Type">
        select
        <include refid="MySBlog_Type_User_Tag"/>
        from t_blog b,t_type t,t_user u,t_tag tag,blog_tag bt
        where b.type_id=t.id
        and b.user_id=u.id
        and tag.id=bt.tag_id
        and b.id=bt.blog_id
        group by b.create_time desc
    </select>


    <select id="findGroupYear" resultType="String">
        SELECT distinct DATE_FORMAT(create_time,'%Y') as year
        from t_blog
        group by create_time order by create_time desc
    </select>


    <select id="countBlog" resultMap="MyBlog_Type">
        select
        b.id, b.title, b.content, b.first_picture, b.description,b.flag, b.views, b.apprecation, b.share_statement, b.commentabled,
        b.published, b.recommened, b.create_time, b.update_time, b.type_id, b.user_id
        from t_blog b
		where  DATE_FORMAT(b.create_time,'%Y')=#{year}

    </select>
    <select id="getCountBlog" resultType="Integer">
        select count(id) from t_blog
    </select>

    <resultMap id="MyBlog_Type" type="com.ylb.Pojo.Blog">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="content" jdbcType="VARCHAR" property="content"/>
        <result column="first_picture" jdbcType="VARCHAR" property="firstPicture"/>
        <result column="flag" jdbcType="VARCHAR" property="flag"/>
        <result column="views" jdbcType="INTEGER" property="views"/>
        <result column="apprecation" jdbcType="INTEGER" property="apprecation"/>
        <result column="share_statement" jdbcType="INTEGER" property="shareStatement"/>
        <result column="commentabled" jdbcType="INTEGER" property="commentabled"/>
        <result column="published" jdbcType="INTEGER" property="published"/>
        <result column="recommened" jdbcType="INTEGER" property="recommened"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="type_id" jdbcType="BIGINT" property="typeId"/>
        <result column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <association property="type" javaType="Type">
            <id column="tid" property="id"/>
            <result column="tname" property="name"/>
        </association>
        <association property="user" javaType="User">
            <id column="uid" jdbcType="BIGINT" property="id"/>
            <result column="nickname" jdbcType="VARCHAR" property="nickname"/>
            <result column="password" jdbcType="VARCHAR" property="password"/>
            <result column="email" jdbcType="VARCHAR" property="email"/>
            <result column="avater" jdbcType="VARCHAR" property="avater"/>
            <result column="type" jdbcType="INTEGER" property="type"/>
            <result column="ucreate_time" jdbcType="TIMESTAMP" property="createTime"/>
            <result column="uupdate_time" jdbcType="TIMESTAMP" property="updateTime"/>
            <result column="username" jdbcType="VARCHAR" property="username"/>
        </association>
        <collection property="tags" ofType="Tag">
            <id column="tagid" jdbcType="BIGINT" property="id"/>
            <result column="tagname" jdbcType="VARCHAR" property="name"/>
        </collection>
    </resultMap>

    <sql id="MySBlog_Type_User_Tag">
        b.id , b.title, b.content, b.first_picture, b.description,b.flag, b.views, b.apprecation, b.share_statement, b.commentabled,
        b.published, b.recommened, b.create_time, b.update_time, b.type_id, b.user_id,
        t.id tid,t.name tname,
        u.id uid, u.nickname, u.password, u.email, u.avater, u.type, u.create_time ucreate_time, u.update_time uupdate_time, u.username,
		tag.id tagid,tag.name tagname

    </sql>


</mapper>